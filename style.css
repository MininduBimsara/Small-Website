* {
  box-sizing: border-box;
  margin: 0px;
  padding: 0px;
  font-family: "Kumbh Sans", sans-serif;
}

/* content-box (default): Width and height only apply to the content area of the element. 
Padding and border are added to the specified width and height.

border-box: Width and height include the content, padding, and border of the element. 
Padding and border widths are subtracted from the specified width and height, so the content area remains consistent.

Using box-sizing: border-box; can simplify CSS layouts and make them more intuitive, 
especially in complex designs where you need elements to maintain a specific size regardless of their padding or border. */

/* Navigation Bar */

.navbar {
  background-color: #131313;
  font-size: 1.2rem;
  display: flex;
  height: 80px;
  justify-content: center;
  align-items: center;
  position: sticky;
  top: 0%;
  z-index: 999; /*this ensures that our navbar will be always in top wherever i go in the page */
}
.navbar_container {
  display: flex;
  justify-content: space-between;
  height: 80px;
  width: 100%;
  z-index: 1;
  max-width: 1300px;
  margin: 0 auto;
  padding: 0 50px;
}
#navbar_logo {
  background-color: #ff8177;
  background-image: linear-gradient(to top, #ff0844 0%, #ffb199 100%);
  background-size: 100%;
  -webkit-background-clip: text;
  -moz-background-clip: text;
  -webkit-text-fill-color: transparent;
  -moz-text-fill-color: transparent;
  display: flex;
  align-items: center;
  cursor: pointer;
  text-decoration: none;
  font-size: 2rem;
}

/*-webkit-background-clip and -moz-background-clip: 
These properties determine how far the background of an element extends. When set to text, the background only appears where the text is, rather than behind the entire element. This creates a cool effect where the background only shows within the contours of the text.*/

/* -webkit-text-fill-color and -moz-text-fill-color: 
These properties specify the color of the text. When set to transparent, it makes the text itself transparent, revealing whatever background or content lies behind it.*/

/* However, it's worth noting that the -webkit- and -moz- prefixes are vendor prefixes, used for compatibility with different web browsers (Webkit-based browsers like Safari and Chrome, and Mozilla-based browsers like Firefox, respectively). Depending on the browser support needed, you might need to include both versions for compatibility.*/

/* background-image: This property is used to set one or more background images for an element. */
/* linear-gradient(): This is a CSS function that creates a linear gradient. It allows you to specify a gradient of colors that transitions in a linear direction. */
/* to top: This part of the function specifies the direction of the gradient. In this case, it indicates that the gradient transitions from bottom to top. 
So, the color at the top of the element will be the final color in the gradient, and the color at the bottom will be the initial color. */
/* #ff0844 0%: This is the starting color of the gradient. #ff0844 is a hexadecimal color value representing a shade of red, and 0% indicates that it starts at the bottom of the element. */
/* #ffb199 100%: This is the ending color of the gradient. #ffb199 is a hexadecimal color value representing a shade of pinkish-orange, and 100% indicates that it ends at the top of the element. */
/* So, when you apply this CSS to an element, it creates a gradient background that starts with a shade of red at the bottom and transitions smoothly to a pinkish-orange color at the top, 
following a linear direction from bottom to top. */

.fa-gem {
  margin-right: 0.5rem;
}

.navbar_menu {
  display: flex;
  align-items: center;
  list-style: none;
  text-align: center;
}

.navbar_links {
  color: #fff;
  display: flex;
  align-items: center;
  justify-content: center;
  text-decoration: none;
  padding: 0 1rem;
  height: 100%;
}

.navbar_btn {
  display: flex;
  align-items: center;
  justify-content: center;
  padding: 0 1rem;
  width: 100%;
}

.button {
  display: flex; /* This property specifies that the element should be displayed as a flex container, allowing for flexible layout of its child elements. */
  align-items: center; /* This property specifies that the element should be displayed as a flex container, allowing for flexible layout of its child elements. */
  justify-content: center; /*  This property aligns the items (child elements) along the main-axis (horizontally in this case) within the flex container. It centers them horizontally. */
  text-decoration: none;
  padding: 20px 10px;
  height: 100%;
  width: 100%;
  border: none;
  outline: none; /* This property removes any outline around the element. This is often used to remove the default focus outline that appears on clickable elements. */
  border-radius: 4px;
  background: #f77062;
  color: #fff;
}

.button:hover {
  background: #4837ff;
  transition: all 0.3s ease;
}

.navbar_links:hover {
  color: #f77062;
  transition: all 0.3s ease;
}

/* transition: This property is used to specify the transition effect to be applied when a CSS property changes its value. 
It allows you to control the speed and timing function of the transition. */
/* all: This keyword indicates that the transition effect should be applied to all properties that change. */
/* 0.3s: This value specifies the duration of the transition effect. In this case, it's set to 0.3 seconds, 
meaning that any change in CSS properties will be smoothly transitioned over a period of 0.3 seconds. */
/* ease: This is the timing function or easing function of the transition. It describes how the transition progresses over time. 
"ease" is one of the built-in timing functions in CSS, and it starts slowly, accelerates in the middle, and then slows down again towards the end, creating a smooth and natural transition effect. */
/* So, when you apply this CSS to an element, any change in its CSS properties will be transitioned smoothly over a duration of 0.3 seconds using the "ease" timing function, 
creating a pleasing visual effect. */

@media screen and (max-width: 960px) {
  .navbar_container {
    display: flex;
    justify-content: space-between;
    height: 80px;
    width: 100%;
    z-index: 1;
    max-width: 1300px;
    padding: 0;
  }

  .navbar_menu {
    display: grid;
    grid-template-columns: auto;
    margin: 0;
    width: 100%;
    position: absolute;
    top: -1000px;
    opacity: 0;
    transition: all 0.5s ease;
    height: 50vh;
    z-index: -1;
    background: #131313;
  }

  /* display: grid;: This property is used to define a grid container. It establishes a new grid formatting context for the children elements. Essentially, 
it tells the browser that the element's content will be laid out using grid layout rules. */
  /* grid-template-columns: auto;: This property is used to define the number and size of the columns in the grid. In this case, it's set to "auto", 
which means that the columns will be sized automatically based on the content within them. 
Each column will be sized to fit its content. */
  /* Refer Positioning TXT for further Details. */

  .navbar_menu.active {
    background: #131313;
    top: 100%;
    opacity: 1;
    transition: all 0.5s ease;
    z-index: 99;
    height: 50vh;
    font-size: 1.6rem;
  }

  #navbar_logo {
    padding-left: 25px;
  }

  .navbar_toggle .bar {
    width: 25px;
    height: 3px;
    margin: 5px auto;
    transition: all 0.5s ease-in-out;
    background: #fff;
  }

  .navbar_item {
    width: 100%;
  }

  .navbar_links {
    text-align: center;
    padding: 2rem;
    width: 100%;
    display: table;
  }

  #mobile-menu {
    position: absolute;
    top: 20%;
    right: 5%;
    transform: translate(5%, 20%);
  }

  .navbar_btn {
    padding-bottom: 2rem;
  }

  .button {
    display: flex;
    justify-content: center;
    align-items: center;
    width: 80%;
    height: 70px;
    margin: 0;
  }

  .navbar_toggle .bar {
    display: block;
    cursor: pointer;
  }
  #mobile-menu.is-active .bar:nth-child(2) {
    opacity: 0;
  }

  #mobile-menu.is-active .bar:nth-child(1) {
    transform: translateY(8px) rotate(45deg);
  }

  #mobile-menu.is-active .bar:nth-child(3) {
    transform: translateY(-8px) rotate(-45deg);
  }
}

/* Hero Section CSS */

.main {
  background-color: #141414;
}

.main_container {
  display: grid;
  grid-template-columns: 1fr 1fr;
  align-items: center;
  justify-self: center;
  margin: 0 auto;
  padding: 0 50px;
  height: 90vh;
  background-color: #141414;
  z-index: 1;
  width: 100%;
  max-width: 1300px;
}

/* When you set grid-template-columns: 1fr 1fr;, you're creating a grid with two columns. 
Each column will take up an equal amount of the available space in the grid container. */

/* What Does 1fr Mean?
fr: This stands for "fractional unit" and is a way to distribute available space in the grid container.
1fr: Represents one fraction of the available space. When you have multiple fr units, the space is divided proportionally. */

.main_content h1 {
  font-size: 4rem;
  background-color: #ff8177;
  background-image: linear-gradient(to top, #ff0844 0%, #ffb199 100%);
  background-size: 100%;
  -webkit-background-clip: text;
  -moz-background-clip: text;
  -webkit-text-fill-color: transparent;
  -moz-text-fill-color: transparent;
}

.main_content h2 {
  font-size: 4rem;
  background-color: #ff8177;
  background-image: linear-gradient(to top, #b721ff 0%, #21d4fd 100%);
  background-size: 100%;
  -webkit-background-clip: text;
  -moz-background-clip: text;
  -webkit-text-fill-color: transparent;
  -moz-text-fill-color: transparent;
}

.main_content p {
  margin-top: 1rem;
  font-size: 2rem;
  font-weight: 700;
  color: #fff;
}

.main_btn {
  font-size: 1rem;
  padding: 10px 10px;
  font-weight: 700;
  background-image: linear-gradient(to top, #f77062 0%, #fe5196 100%);
  border: none;
  border-radius: 4px;
  margin-top: 2rem;
  color: #fff;
  cursor: pointer;
  position: relative;
  transition: all 0.35s;
  outline: none;
}

.main_btn a {
  position: relative;
  z-index: 2;
  text-decoration: none;
  color: #fff;
}

.main_btn:after {
  position: absolute;
  content: "";
  top: 0;
  left: 0;
  width: 0;
  height: 100%;
  background: #4837ff;
  transition: all 0.35s;
  border-radius: 4px;
}

.main_btn:hover {
  color: #fff;
}

/* Psuedo Classes */
/* it can be used to:

    Style an element when a user mouses over it
    Style visited and unvisited links differently
    Style an element when it gets focus*/

.main_btn:hover::after {
  width: 100%;
}

.main_img-container {
  text-align: center;
}

#main_img {
  height: 80%;
  width: 80%;
}

/* Mobile Responsive */

@media screen and (max-width: 768px) {
  .main_container {
    display: grid;
    grid-template-columns: auto;
    align-items: center;
    justify-self: center;
    margin: 0 auto;
    height: 90vh;
    width: 100%;
  }

  .main_content {
    text-align: center;
    margin-bottom: 4rem;
  }

  .main_content h1 {
    font-size: 2.5rem;
    margin-top: 2rem;
  }

  .main_content h2 {
    font-size: 3rem;
  }

  .main_content p {
    margin-top: 1rem;
    font-size: 1.5rem;
  }
}

@media screen and (max-width: 480px) {
  .main_content h1 {
    font-size: 2rem;
    margin-top: 3rem;
  }

  .main_content h2 {
    font-size: 2rem;
  }

  .main_content p {
    margin-top: 2rem;
    font-size: 1.5rem;
  }

  .main_btn {
    padding: 12px 36px;
    margin: 2.5rem 0;
  }
}

/* Services Section CSS */

.services {
  background: #141414;
  display: flex;
  flex-direction: column;
  align-items: center;
  height: 100vh;
}

.services h1 {
  background-color: #ff8177;
  background-image: linear-gradient(
    to right,
    #ff8177 0%,
    #ff867a 0%,
    #ff8c7f 21%,
    #f99185 52%,
    #cf556c 78%,
    #b12a5b 100%
  );
  background-size: 100%;
  margin-bottom: 5rem;
  font-size: 2.5rem;
  -webkit-background-clip: text;
  -moz-background-clip: text;
  -webkit-text-fill-color: transparent;
  -moz-text-fill-color: transparent;
}

.services_container {
  display: flex;
  justify-content: center;
  flex-wrap: wrap;
}

.services_card {
  margin: 1rem;
  height: 525px;
  width: 480px;
  border-radius: 4px;
  background-image: linear-gradient(
      to bottom,
      rgba(0, 0, 0, 0) 0%,
      rgba(17, 17, 17, 0.6) 100%
    ),
    url("/images/pic2.jpg");
  background-size: cover;
  position: relative;
  color: #fff;
}

.services_card:nth-child(2) {
  margin: 1rem;
  height: 525px;
  width: 480px;
  border-radius: 4px;
  background-image: linear-gradient(
      to bottom,
      rgba(0, 0, 0, 0) 0%,
      rgba(17, 17, 17, 0.6) 100%
    ),
    url("/images/pic3.jpg");
}

.services h2 {
  position: absolute;
  top: 350px;
  left: 30px;
}

.services_card p {
  position: absolute;
  top: 400px;
  left: 30px;
}

.services_card button {
  color: #fff;
  padding: 10px 20px;
  border: none;
  outline: none;
  border-radius: 4px;
  background: #f77062;
  position: absolute;
  top: 440px;
  left: 30px;
  font-size: 1rem;
  cursor: pointer;
}

.services_card:hover {
  transform: scale(1.075);
  transition: 0.2s ease-in;
  cursor: pointer;
}

@media screen and (max-width: 960px) {
  .services {
    height: 1600px;
  }

  .services h1 {
    font-size: 2rem;
    margin-top: 10rem;
  }
}

@media screen and (max-width: 480px) {
  .services {
    height: 1400px;
  }

  .services h1 {
    font-size: 1.2rem;
  }

  .services_card {
    width: 300px;
  }

  .services_card:nth-child(2) {
    width: 300px;
  }
}

/* Footer CSS */

.footer_container {
  background-color: #141414;
  padding: 5rem 0;
  display: flex;
  flex-direction: column;
  justify-content: center;
  align-items: center;
}

#footer_logo {
  color: #fff;
  display: flex;
  align-items: center;
  cursor: pointer;
  text-decoration: none;
  font-size: 2rem;
}

.footer_links {
  width: 100%;
  max-width: 1000px;
  display: flex;
  justify-content: center;
}

.footer_link-wrapper {
  display: flex;
}

.footer_link-items {
  display: flex;
  flex-direction: column;
  align-items: flex-start;
  margin: 16px;
  text-align: left;
  width: 160px;
  box-sizing: border-box;
}

.footer_link-items h2 {
  margin-bottom: 16px;
}

.footer_link-items > h2 {
  color: #fff;
}

.footer_link-items a {
  color: #fff;
  text-decoration: none;
  margin-bottom: 0.5rem;
}

.footer_link-items a:hover {
  color: #e9e9e9;
  transition: 0.3s ease-out;
}

/* Social Icons */

.social_icon-link {
  color: #fff;
  font-size: 24px;
}

.social_media {
  max-width: 1000px;
  width: 100%;
}

.social_media-wrap {
  display: flex;
  justify-content: space-between;
  align-items: center;
  width: 90%;
  max-width: 1000px;
  margin: 40px auto 0 auto;
}

.social_icons {
  display: flex;
  justify-content: space-between;
  align-items: center;
  width: 240px;
}

.social_logo {
  color: #fff;
  justify-self: flex-start;
  margin-left: 20px;
  cursor: pointer;
  text-decoration: none;
  font-size: 2rem;
  display: flex;
  align-items: center;
  margin-bottom: 16px;
}

.website_rights {
  color: #fff;
}

@media screen and (max-width: 820px) {
  .footer_links {
    padding-top: 2rem;
  }

  #footer_logo {
    margin-bottom: 2rem;
  }

  .website_rights {
    margin-bottom: 2rem;
  }

  .footer_link-wrapper {
    flex-direction: column;
  }

  .social_media-wrap {
    flex-direction: column;
  }
}

/*  */

@media screen and (max-width: 480px) {
  .footer_link-items {
    margin: 0;
    padding: 10px;
    width: 100%;
  }
}
